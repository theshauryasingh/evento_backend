import { Condition } from './conditionTest';
import { Compiler } from './peers/webpack';
import { SourceMapDevToolPluginController } from './SourceMapDevToolPluginController';
import { TerserWebpackPluginController } from './TerserWebpackPluginController';
export type TranspileWebpackPluginOptions = Partial<TranspileWebpackPluginInternalOptions>;
export interface TranspileWebpackPluginInternalOptions {
    exclude: Condition;
    hoistNodeModules: boolean;
    longestCommonDir?: string;
    extentionMapping: Record<string, string>;
    preferResolveByDependencyAsCjs: boolean;
}
export declare class TranspileWebpackPlugin {
    options: TranspileWebpackPluginInternalOptions;
    sourceMapDevToolPluginController: SourceMapDevToolPluginController;
    terserWebpackPluginController: TerserWebpackPluginController;
    constructor(options?: TranspileWebpackPluginOptions);
    apply(compiler: Compiler): void;
}
//# sourceMappingURL=TranspileWebpackPlugin.d.ts.map