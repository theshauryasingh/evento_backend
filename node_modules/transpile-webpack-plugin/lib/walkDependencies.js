"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.walkDependencies = exports.walkDependenciesSync = void 0;
function walkDependenciesSync(m, fn) {
    for (let i = 0, n = m.dependencies.length; i < n; i++) {
        fn(m.dependencies[i], i, m.dependencies);
    }
    for (const b of m.blocks) {
        for (let i = 0, n = b.dependencies.length; i < n; i++) {
            fn(b.dependencies[i], i, b.dependencies);
        }
    }
}
exports.walkDependenciesSync = walkDependenciesSync;
function walkDependencies(m, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        for (let i = 0, n = m.dependencies.length; i < n; i++) {
            yield fn(m.dependencies[i], i, m.dependencies);
        }
        for (const b of m.blocks) {
            for (let i = 0, n = b.dependencies.length; i < n; i++) {
                yield fn(b.dependencies[i], i, b.dependencies);
            }
        }
    });
}
exports.walkDependencies = walkDependencies;
//# sourceMappingURL=walkDependencies.js.map