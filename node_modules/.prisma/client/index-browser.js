
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.9.1
 * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
 */
Prisma.prismaVersion = {
  client: "5.9.1",
  engine: "23fdc5965b1e05fc54e5f26ed3de66776b93de64"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  full_name: 'full_name',
  email: 'email',
  password: 'password',
  contact_number: 'contact_number',
  token: 'token',
  role_id: 'role_id'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.EventScalarFieldEnum = {
  event_id: 'event_id',
  event_name: 'event_name',
  event_description: 'event_description',
  location: 'location',
  start_date: 'start_date',
  end_date: 'end_date',
  event_tags: 'event_tags',
  creator_id: 'creator_id',
  approval: 'approval',
  status: 'status',
  entry_fee: 'entry_fee',
  thumbnail_link: 'thumbnail_link',
  banner_link: 'banner_link',
  video_link: 'video_link',
  venue_id: 'venue_id'
};

exports.Prisma.PlanScalarFieldEnum = {
  plan_id: 'plan_id',
  plan_features: 'plan_features',
  payment: 'payment',
  plan_name: 'plan_name'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  plan_id: 'plan_id',
  amount: 'amount',
  GST: 'GST',
  transaction_id: 'transaction_id',
  transaction_type: 'transaction_type'
};

exports.Prisma.User_PlanScalarFieldEnum = {
  plan_id: 'plan_id',
  user_id: 'user_id',
  is_activate: 'is_activate'
};

exports.Prisma.RoleScalarFieldEnum = {
  role_id: 'role_id',
  role_name: 'role_name'
};

exports.Prisma.SponsorScalarFieldEnum = {
  sponsor_id: 'sponsor_id',
  event_id: 'event_id',
  title: 'title',
  description: 'description',
  image_url: 'image_url',
  start_time: 'start_time',
  end_time: 'end_time',
  venue_id: 'venue_id'
};

exports.Prisma.AdvertisementScalarFieldEnum = {
  advertisement_id: 'advertisement_id',
  event_id: 'event_id',
  title: 'title',
  level: 'level',
  start_date: 'start_date',
  end_date: 'end_date',
  image_url: 'image_url'
};

exports.Prisma.LostAndFoundScalarFieldEnum = {
  lost_and_found_id: 'lost_and_found_id',
  event_id: 'event_id',
  item_name: 'item_name',
  description: 'description',
  is_claimed: 'is_claimed',
  claim_user_id: 'claim_user_id',
  reporting_timestamp: 'reporting_timestamp',
  claim_timestamp: 'claim_timestamp',
  reporter_user_id: 'reporter_user_id'
};

exports.Prisma.EventMapScalarFieldEnum = {
  event_map_id: 'event_map_id',
  map_object: 'map_object',
  event_id: 'event_id'
};

exports.Prisma.ShopsScalarFieldEnum = {
  shop_id: 'shop_id',
  shop_name: 'shop_name',
  event_id: 'event_id',
  shop_type: 'shop_type'
};

exports.Prisma.ShopPaymentScalarFieldEnum = {
  payment_id: 'payment_id',
  amount: 'amount',
  shop_id: 'shop_id',
  event_id: 'event_id',
  user_id: 'user_id'
};

exports.Prisma.ReviewScalarFieldEnum = {
  review_id: 'review_id',
  review_title: 'review_title',
  review_desc: 'review_desc',
  user_id: 'user_id',
  rating: 'rating',
  timestamp: 'timestamp',
  event_id: 'event_id'
};

exports.Prisma.ItineraryScalarFieldEnum = {
  itinerary_id: 'itinerary_id',
  event_id: 'event_id',
  itinerary_name: 'itinerary_name',
  itinerary_description: 'itinerary_description',
  timestamp: 'timestamp',
  image_url: 'image_url'
};

exports.Prisma.FavouriteScalarFieldEnum = {
  event_id: 'event_id',
  itinerary_id: 'itinerary_id',
  user_id: 'user_id'
};

exports.Prisma.Token_TransactionScalarFieldEnum = {
  ID: 'ID',
  transaction_type: 'transaction_type',
  token: 'token',
  event_ID: 'event_ID',
  transaction_ID: 'transaction_ID',
  shop_ID: 'shop_ID'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  body: 'body',
  type: 'type',
  timestamp: 'timestamp',
  user_id: 'user_id',
  event_id: 'event_id'
};

exports.Prisma.AmenitiesScalarFieldEnum = {
  amenity_id: 'amenity_id',
  event_id: 'event_id',
  name: 'name',
  description: 'description',
  latitude: 'latitude',
  longitude: 'longitude',
  image_url: 'image_url'
};

exports.Prisma.VenueScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.Emergency_ContactsScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  contact_name: 'contact_name',
  contact_number: 'contact_number',
  contact_type: 'contact_type'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};


exports.Prisma.ModelName = {
  User: 'User',
  RefreshToken: 'RefreshToken',
  Event: 'Event',
  Plan: 'Plan',
  Transaction: 'Transaction',
  User_Plan: 'User_Plan',
  Role: 'Role',
  Sponsor: 'Sponsor',
  Advertisement: 'Advertisement',
  LostAndFound: 'LostAndFound',
  EventMap: 'EventMap',
  Shops: 'Shops',
  ShopPayment: 'ShopPayment',
  Review: 'Review',
  Itinerary: 'Itinerary',
  Favourite: 'Favourite',
  Token_Transaction: 'Token_Transaction',
  Notification: 'Notification',
  Amenities: 'Amenities',
  Venue: 'Venue',
  Emergency_Contacts: 'Emergency_Contacts'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
