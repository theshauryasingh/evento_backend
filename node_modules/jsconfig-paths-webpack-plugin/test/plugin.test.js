const { expect } = require('chai');

const Resolver = require('../index');
const { paths, Compilator } = require('./fixtures');
const config = require('../jsconfig');

describe('Path plugin', () => {

  const resolver = new Resolver();
  const compilator = new Compilator();

  it('should read jsconfig', () => {
    expect(resolver.config).to.equal(config);
  });

  it('should create plugins', () => {
    resolver.apply(compilator);  
    expect(compilator.plugins.length).to.equal(Object.keys(config.compilerOptions.paths).length);
  });

  it('should resolve aliases', () => {
    const path = resolver.absoluteBaseUrl;
    let resolvedPath = null;

    Object.keys(paths).forEach((alias) => {
      const expectedPath = paths[alias];
      const request = { path, request: alias };
      compilator.plugins.forEach((plugin) => {       
        plugin(request, (err, result) => {
          if (result) {
            resolvedPath = result.request;
          };
        });
      });
      expect(resolvedPath).to.equal(expectedPath);
    });
  });

});